{"version":3,"sources":["components/Home.js","components/ResponsiveDrawer.js","components/Form.js","components/RandomPicker.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","history","name","content","Button","variant","size","color","onClick","push","endIcon","ArrowForwardIos","useStyles","makeStyles","theme","root","display","drawer","width","flexShrink","appBar","background","zIndex","menuButton","marginRight","spacing","breakpoints","up","toolbar","mixins","drawerPaper","flexGrow","padding","window","classes","useTheme","React","useState","open","setOpen","mobileOpen","setMobileOpen","itemsList","text","secondLayer","handleDrawerToggle","className","Divider","List","ListItem","button","ListItemText","primary","Collapse","in","timeout","unmountOnExit","component","disablePadding","inset","container","undefined","document","body","CssBaseline","AppBar","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","onClose","paper","ModalProps","keepMounted","xsDown","onSubmit","handleSubmit","TextField","multiline","id","label","placeholder","value","data","names","onChange","handleChange","style","type","RandomPicker","state","random_generated","bind","event","this","setState","target","console","log","split","randomName","Math","floor","random","length","localStorage","setItem","JSON","stringify","getItem","parse","join","marginBottom","marginTop","Component","marginLeft","drawerWidth","App","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f31219d.chunk.js","sourcesContent":["import { Button } from '@material-ui/core'\nimport { ArrowForwardIos } from '@material-ui/icons'\nimport React from 'react'\nimport MetaTags from 'react-meta-tags'\nimport { withRouter } from 'react-router-dom'\n\nfunction Home(props) {\n    const { history } = props\n\n    function handleClick() {\n        history.push('/generators/picker')\n    }\n        \n        \n        \n    \n\n    return(\n        <div>\n            <MetaTags>\n                <title>random-now.com - Free random generators</title>\n                <meta name=\"description\" content=\"Pick random winners. Generate random groups. Get started now for free!\" />\n          </MetaTags>\n                <div>\n                    <h1>random-now.com</h1>\n                    <h3>Welcome to random-now.com! Select a random generator and get started now!</h3>\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={handleClick} endIcon={<ArrowForwardIos />}>\n                        Random Picker\n                    </Button>\n                    <br />\n                    <br />\n                    <br />\n                    <h5>More random generators are coming soon!</h5>\n                </div>\n        </div>  \n    )\n}\n\nexport default withRouter(Home)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse'\nimport { withRouter } from 'react-router-dom'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  appBar: {\n    background: 'rgb(113, 116, 129)',\n    zIndex: theme.zIndex.drawer + 1,\n    \n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: {\n    ...theme.mixins.toolbar,\n    zIndex: theme.zIndex.drawer - 1\n  },\n\n  drawerPaper: {\n    width: drawerWidth,\n    \n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction ResponsiveDrawer(props) {\n  const { window, history } = props;\n  function handleClick() {\n    setOpen(!open)\n  }\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false)\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const itemsList = [\n    {\n        text: \"Home\",\n        onClick: () => {\n          history.push('/')\n          // setOpen(false)\n          setMobileOpen(false)\n        }\n    },\n    {\n        text: \"Generators\",\n        onClick: () => {\n          handleClick()\n        },\n        secondLayer: [\n          {\n            text: \"Random Picker\",\n            onClick: () => {\n                history.push('/generators/picker')\n                // setOpen(false)\n                setMobileOpen(false)\n            }\n          },\n          {\n            text: \"Random Groups\",\n            onClick: () => {\n                history.push('/generators/groups')\n                // setOpen(false)\n                setMobileOpen(false)\n            }\n          },\n          {\n            text: \"Throw a Dice\",\n            onClick: () => {\n                history.push('/generators/dice')\n                // setOpen(false)\n                setMobileOpen(false)\n            }\n          }\n        ]\n    },\n    {\n        text: \"Contact us\",\n        onClick: () => {\n            history.push('/contact')\n            // setOpen(false)\n            setMobileOpen(false)\n        }\n    }\n]\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n        <List>\n            <ListItem button key={itemsList[0].text} onClick={itemsList[0].onClick}>\n                <ListItemText primary={itemsList[0].text} />\n            </ListItem>\n            <ListItem button key={itemsList[1].text} onClick={itemsList[1].onClick}>\n                <ListItemText primary={itemsList[1].text} />\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button key={itemsList[1].secondLayer[0].text} onClick={itemsList[1].secondLayer[0].onClick}>\n                        <ListItemText inset primary={itemsList[1].secondLayer[0].text} />\n                    </ListItem>\n                    { /* <ListItem button key={itemsList[1].secondLayer[1].text} onClick={itemsList[1].secondLayer[1].onClick}>\n                        <ListItemText inset primary={itemsList[1].secondLayer[1].text} />\n                    </ListItem>\n                    <ListItem button key={itemsList[1].secondLayer[2].text} onClick={itemsList[1].secondLayer[2].onClick}>\n                        <ListItemText inset primary={itemsList[1].secondLayer[2].text} />\n                    </ListItem> */}\n                </List>\n            </Collapse>\n            { /* <ListItem button key={itemsList[2].text} onClick={itemsList[2].onClick}>\n                <ListItemText primary={itemsList[2].text} />\n              </ListItem> */}\n        </List>\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar  className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h5\" noWrap>\n            random-now.com\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      \n    </div>\n  );\n}\n\nResponsiveDrawer.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default withRouter(ResponsiveDrawer);","import React from 'react'\nimport '../App.css'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField';\nimport { ArrowForwardIos } from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom'\n\n\nfunction Form(props) {\n    \n\n    return(\n        <div>\n            <form onSubmit={props.handleSubmit}>\n                <TextField \n                    multiline id=\"outlined-textarea\"\n                    label=\"Names/Items\"\n                    placeholder=\"Enter all the names/items here\" \n                    variant=\"outlined\" \n                    value={props.data.names} \n                    onChange={props.handleChange}\n                    \n                    style = {{width: 500}}\n                    />\n                <br/>\n                <br/>\n                <Button type= \"submit\" variant=\"contained\" color=\"primary\" endIcon={<ArrowForwardIos />}>\n                    Pick random\n                </Button>\n                \n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(Form)\n","import '../App.css';\nimport { Component } from 'react';\nimport Form from './Form'\n\n\n\n\nclass RandomPicker extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      names: '',\n      random_generated: [],\n    }\n    \n    this.handleChange=this.handleChange.bind(this)\n    this.handleSubmit=this.handleSubmit.bind(this)\n  }\n    \n  handleChange(event) {\n    this.setState({\n      names: event.target.value\n    })\n    console.log(this.state.names)\n  }\n  \n  handleSubmit() {\n    var names = this.state.names.split(\"\\n\")\n    console.log(names)\n    var randomName = names[Math.floor(Math.random()*names.length)]\n    localStorage.setItem('randomName', randomName)\n    localStorage.setItem('names', JSON.stringify(names))\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"names\") != null) {\n      const names = JSON.parse(localStorage.getItem(\"names\"))\n      this.setState({\n        names: names.join(\"\\n\")\n      })\n    }\n  }\n\n  render() {\n    if (localStorage.getItem(\"randomName\") != null) {\n      var randomName = localStorage.getItem(\"randomName\")\n      /*\n      var names = JSON.parse(localStorage.getItem(\"names\"));\n      var nameList = names.map((name, index) => \n      <li key={index}>\n          {name}\n      </li>) */\n    }\n    \n    return(\n        <div >\n            <h1>Random Picker</h1>\n            <h3>Enter all the names or items and pick a random one!</h3>\n            <h4>Press enter after every entry!</h4>\n            <Form \n                handleChange={this.handleChange}\n                handleSubmit={this.handleSubmit}\n                data={this.state}\n            />\n            <p style = {{marginBottom: 0}}>Randomly picked was:</p>\n            <b style = {{marginTop: 0}}>{randomName}</b>\n        </div>\n    )\n  }\n}\n\nexport default RandomPicker;\n","import './App.css';\nimport { Switch, Route, HashRouter as Router } from 'react-router-dom'\nimport Home from './components/Home'\nimport ResponsiveDrawer from './components/ResponsiveDrawer';\nimport RandomPicker from './components/RandomPicker';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst drawerWidth = 240\n\n  const useStyles = makeStyles((theme) => ({\n    content: {\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: drawerWidth + 40\n        },\n        flexShrink: 0,\n        padding: 50\n    // padding: theme.spacing(3),\n    },\n  }));\n\nfunction App() {\n  \n  const classes = useStyles();\n\n  return(\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <ResponsiveDrawer />\n          <div className={classes.content}>\n            <Switch>\n              <Route exact path={process.env.PUBLIC_URL + \"/\"}>\n                <Home />\n              </Route>\n              <Route exact path={process.env.PUBLIC_URL + \"/generators/picker\"}>\n                <RandomPicker />\n              </Route> \n              \n            </Switch>\n          </div>  \n        </header> \n      </div>\n    </Router>\n  )\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}