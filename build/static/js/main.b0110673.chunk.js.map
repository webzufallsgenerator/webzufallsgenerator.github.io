{"version":3,"sources":["components/Home.js","components/ResponsiveDrawer.js","components/PickerForm.js","components/RandomPicker.js","components/NumberForm.js","components/RandomNumber.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","history","buttonlist","text","handleClick","push","name","content","Button","style","margin","variant","size","color","onClick","endIcon","ArrowForwardIos","tyle","useStyles","makeStyles","theme","root","display","drawer","width","flexShrink","appBar","background","zIndex","menuButton","marginRight","spacing","breakpoints","up","toolbar","mixins","drawerPaper","flexGrow","padding","window","classes","useTheme","React","useState","open","setOpen","mobileOpen","setMobileOpen","itemsList","secondLayer","handleDrawerToggle","className","Divider","List","ListItem","button","ListItemText","primary","Collapse","in","timeout","unmountOnExit","component","disablePadding","inset","container","undefined","document","body","CssBaseline","AppBar","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","onClose","paper","ModalProps","keepMounted","xsDown","textfield","TextField","multiline","id","label","placeholder","value","data","names","onChange","handleChange","buttons","marginLeft","type","onSubmit","handleSubmit","RandomPicker","state","random_generated","bind","clearForm","event","this","setState","target","localStorage","clear","location","reload","split","randomName","Math","floor","random","length","setItem","JSON","stringify","getItem","parse","join","randomResult","marginBottom","marginTop","Component","NumberForm","textfields","minimum","maximum","RandomNumber","randomNumber","Number","randomNum2","randomNum","alert","result","drawerWidth","App","StrictMode","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b0110673.chunk.js","sourcesContent":["import { Button } from '@material-ui/core'\nimport { ArrowForwardIos } from '@material-ui/icons'\nimport React from 'react'\nimport MetaTags from 'react-meta-tags'\nimport { withRouter } from 'react-router-dom'\n\nfunction Home(props) {\n    const { history } = props\n\n    const buttonlist = [\n        {\n            text: \"Item/Name Picker\",\n            handleClick: () => {\n                history.push('/generators/item_picker')\n            }\n        },\n        {\n            text: \"Number Picker\",\n            handleClick: () => {\n                history.push('/generators/number_picker')\n            }\n        }\n    ]\n\n\n      \n        \n        \n    \n\n    return(\n        <div>\n            <MetaTags>\n                <title>random-now - Free random generators</title>\n                <meta name=\"description\" content=\"Pick random winners. Generate random groups. Get started now for free!\" />\n          </MetaTags>\n                <div>\n                    <h1>random-now</h1>\n                    <h3>Welcome to random-now! Select a random generator and get started now!</h3>\n                    <Button style={{margin: 20}} variant=\"contained\" size=\"large\" color=\"primary\" onClick={buttonlist[0].handleClick} endIcon={<ArrowForwardIos />}>\n                        {buttonlist[0].text}\n                    </Button>\n                    <Button tyle={{margin: 20}} variant=\"contained\" size=\"large\" color=\"primary\" onClick={buttonlist[1].handleClick} endIcon={<ArrowForwardIos />}>\n                        {buttonlist[1].text}\n                    </Button>\n                    <br />\n                    <br />\n                    <br />\n                    \n                </div>\n        </div>  \n    )\n}\n\nexport default withRouter(Home)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse'\nimport { withRouter } from 'react-router-dom'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  appBar: {\n    background: 'rgb(113, 116, 129)',\n    zIndex: theme.zIndex.drawer + 1,\n    \n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: {\n    ...theme.mixins.toolbar,\n    zIndex: theme.zIndex.drawer - 1\n  },\n\n  drawerPaper: {\n    width: drawerWidth,\n    \n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction ResponsiveDrawer(props) {\n  const { window, history } = props;\n  function handleClick() {\n    setOpen(!open)\n  }\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false)\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const itemsList = [\n    {\n        text: \"Home\",\n        onClick: () => {\n          history.push('/')\n          // setOpen(false)\n          setMobileOpen(false)\n        }\n    },\n    {\n        text: \"Generators\",\n        onClick: () => {\n          handleClick()\n        },\n        secondLayer: [\n          {\n            text: \"Random Picker\",\n            onClick: () => {\n                history.push('/generators/item_picker')\n                // setOpen(false)\n                setMobileOpen(false)\n            }\n          },\n          {\n            text: \"Random Groups\",\n            onClick: () => {\n                history.push('/generators/groups')\n                // setOpen(false)\n                setMobileOpen(false)\n            }\n          },\n          {\n            text: \"Random Number\",\n            onClick: () => {\n              history.push('/generators/number_picker')\n              setMobileOpen(false)\n            }\n          },\n          {\n            text: \"Throw a Dice\",\n            onClick: () => {\n                history.push('/generators/dice')\n                // setOpen(false)\n                setMobileOpen(false)\n            }\n          }\n        ]\n    },\n    {\n        text: \"Contact us\",\n        onClick: () => {\n            history.push('/contact')\n            // setOpen(false)\n            setMobileOpen(false)\n        }\n    }\n]\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n        <List>\n            <ListItem button key={itemsList[0].text} onClick={itemsList[0].onClick}>\n                <ListItemText primary={itemsList[0].text} />\n            </ListItem>\n            <ListItem button key={itemsList[1].text} onClick={itemsList[1].onClick}>\n                <ListItemText primary={itemsList[1].text} />\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button key={itemsList[1].secondLayer[0].text} onClick={itemsList[1].secondLayer[0].onClick}>\n                      <ListItemText inset primary={itemsList[1].secondLayer[0].text} />\n                    </ListItem>\n                    <ListItem button key={itemsList[1].secondLayer[2].text} onClick={itemsList[1].secondLayer[2].onClick}>\n                      <ListItemText inset primary={itemsList[1].secondLayer[2].text} />\n                    </ListItem>\n                    { /* <ListItem button key={itemsList[1].secondLayer[1].text} onClick={itemsList[1].secondLayer[1].onClick}>\n                        <ListItemText inset primary={itemsList[1].secondLayer[1].text} />\n                    </ListItem>\n                    <ListItem button key={itemsList[1].secondLayer[2].text} onClick={itemsList[1].secondLayer[2].onClick}>\n                        <ListItemText inset primary={itemsList[1].secondLayer[2].text} />\n                    </ListItem> */}\n                </List>\n            </Collapse>\n            { /* <ListItem button key={itemsList[2].text} onClick={itemsList[2].onClick}>\n                <ListItemText primary={itemsList[2].text} />\n              </ListItem> */}\n        </List>\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar  className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h5\" noWrap>\n            random-now\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      \n    </div>\n  );\n}\n\nResponsiveDrawer.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default withRouter(ResponsiveDrawer);","import React from 'react'\nimport '../App.css'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField';\nimport { ArrowForwardIos } from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom'\nimport Hidden from '@material-ui/core/Hidden';\n\nfunction PickerForm(props) {\n    \n    const textfield = (\n        <div>\n           <Hidden smUp implementation=\"css\">\n                <TextField \n                    multiline id=\"outlined-textarea\"\n                    label=\"Names/Items\"\n                    placeholder=\"Enter all the names/items here\" \n                    variant=\"outlined\" \n                    value={props.data.names} \n                    onChange={props.handleChange}\n                    style = {{width: 300} }\n                />\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n                <TextField \n                    multiline id=\"outlined-textarea\"\n                    label=\"Names/Items\"\n                    placeholder=\"Enter all the names/items here\" \n                    variant=\"outlined\" \n                    value={props.data.names} \n                    onChange={props.handleChange}\n                    style = {{width: 400} }\n                />\n            </Hidden> \n        </div>\n    )\n\n    const buttons = (\n        <div>\n            <Hidden smUp implementation=\"css\">\n               <div style={{display:\"inline\"}}>\n                    <Button onClick={props.handleClick} variant=\"contained\" color=\"primary\" endIcon={<ArrowForwardIos />} size=\"small\" >\n                        Clear form\n                    </Button>\n                    <Button style={{marginLeft: 10}} type= \"submit\" variant=\"contained\" color=\"primary\" endIcon={<ArrowForwardIos />} size=\"small\">\n                        Pick random\n                    </Button>\n                </div> \n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n               <div style={{display:\"inline\"}}>\n                    <Button onClick={props.handleClick} variant=\"contained\" color=\"primary\" endIcon={<ArrowForwardIos />} >\n                        Clear form\n                    </Button>\n                    <Button style={{marginLeft: 50}} type= \"submit\" variant=\"contained\" color=\"primary\" endIcon={<ArrowForwardIos />}>\n                        Pick random\n                    </Button>\n                </div> \n            </Hidden>\n        </div>\n    )\n\n    return(\n        <div>\n            <form onSubmit={props.handleSubmit}>\n                {textfield}\n                <br/>\n                {buttons}\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(PickerForm)\n","import '../App.css';\nimport { Component } from 'react';\nimport PickerForm from './PickerForm'\n\nclass RandomPicker extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      names: '',\n      random_generated: null,\n    }\n    \n    this.handleChange=this.handleChange.bind(this)\n    this.handleSubmit=this.handleSubmit.bind(this)\n    this.clearForm=this.clearForm.bind(this)\n  }\n    \n  handleChange(event) {\n    this.setState({\n      names: event.target.value\n    })\n  }\n  \n  clearForm() {\n    localStorage.clear()\n    window.location.reload()\n  }\n\n  handleSubmit() {\n    var names = this.state.names.split(\"\\n\")\n    var randomName = names[Math.floor(Math.random()*names.length)]\n    localStorage.setItem('randomName', randomName)\n    localStorage.setItem('names', JSON.stringify(names))\n    window.location.reload()\n    this.setState({\n      random_generated: randomName\n    })\n    }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"names\") != null) {\n      const names = JSON.parse(localStorage.getItem(\"names\"))\n      this.setState({\n        names: names.join(\"\\n\")\n      })\n    }\n  }\n\n  render() {\n    if (this.state.random_generated !== localStorage.getItem(\"randomName\")) {\n      var randomName = localStorage.getItem(\"randomName\")\n    } else {\n      randomName = this.state.random_generated\n    }\n\n    if (randomName != null && randomName !== \"\") {\n      var randomResult = (\n        <div>\n          <p style = {{marginBottom: 0}}>Randomly picked was:</p>\n          <b style = {{marginTop: 0}}>{randomName}</b>\n        </div>\n      ) \n    } else {\n      randomResult = null\n    }\n     \n\n    /*\n     if (localStorage.getItem(\"randomName\") != null) {\n      var randomName = localStorage.getItem(\"randomName\")\n      \n      \n      var names = JSON.parse(localStorage.getItem(\"names\"));\n      var nameList = names.map((name, index) => \n      <li key={index}>\n          {name}\n      </li>) \n    }\n    */\n    \n    return(\n        <div >\n            <h1>Random Picker</h1>\n            <h3>Enter all the names or items and pick a random one!</h3>\n            <h4>Press enter after every entry!</h4>\n            <PickerForm \n                handleChange={this.handleChange}\n                handleSubmit={this.handleSubmit}\n                handleClick={this.clearForm}\n                data={this.state}\n            />\n\n            {randomResult}\n\n            \n        </div>\n    )\n  }\n}\n\nexport default RandomPicker;\n","import { TextField , Hidden , Button } from '@material-ui/core'\nimport { ArrowForwardIos } from '@material-ui/icons';\nimport React from 'react'\n\nfunction NumberForm(props) {\n\n    const textfields = (\n        <div style={{display: 'inline'}}>\n            <Hidden smUp implementation=\"css\">\n                <TextField\n                    style={{margin: 10}}\n                    type=\"number\" \n                    placeholder=\"Enter minimum\" \n                    label=\"Minimum\"\n                    variant=\"outlined\" \n                    name=\"minimum\"\n                    value={props.data.minimum} \n                    onChange={props.handleChange}\n                >        \n                </TextField>\n                <TextField\n                    style={{margin: 10}}\n                    type=\"number\" \n                    placeholder=\"Enter maximum\" \n                    label=\"Maximum\"\n                    variant=\"outlined\" \n                    name=\"maximum\"\n                    value={props.data.maximum} \n                    onChange={props.handleChange}\n                >        \n                </TextField>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n                <TextField\n                    style={{margin: 20}}\n                    type=\"number\" \n                    placeholder=\"Enter minimum\" \n                    label=\"Minimum\"\n                    variant=\"outlined\" \n                    name=\"minimum\"\n                    value={props.data.minimum} \n                    onChange={props.handleChange}\n                >        \n                </TextField>\n                <TextField\n                    style={{margin: 20}}\n                    type=\"number\" \n                    placeholder=\"Enter maximum\" \n                    label=\"Maximum\"\n                    variant=\"outlined\" \n                    name=\"maximum\"\n                    value={props.data.maximum} \n                    onChange={props.handleChange}\n                >        \n                </TextField>\n            </Hidden>\n\n        </div>\n    )\n\n    const buttons = (\n        <div>\n            <Hidden smUp implementation=\"css\">\n               <div style={{display:\"inline\"}}>\n                    <Button style={{margin: 20}} onClick={props.handleClick} variant=\"contained\" color=\"primary\" endIcon={<ArrowForwardIos />} size=\"small\" >\n                        Clear form\n                    </Button>\n                    <Button style={{margin: 20}} type= \"submit\" variant=\"contained\" color=\"primary\" endIcon={<ArrowForwardIos />} size=\"small\">\n                        Pick random\n                    </Button>\n                </div> \n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n               <div style={{display:\"inline\"}}>\n                    <Button style={{margin: 20}} onClick={props.handleClick} variant=\"contained\" color=\"primary\" endIcon={<ArrowForwardIos />} >\n                        Clear form\n                    </Button>\n                    <Button style={{margin: 20}} type= \"submit\" variant=\"contained\" color=\"primary\" endIcon={<ArrowForwardIos />}>\n                        Pick random\n                    </Button>\n                </div> \n            </Hidden>\n        </div>\n    )\n\n    return(\n        <div>\n            <form onSubmit={props.handleSubmit}>\n                {textfields}\n                {buttons}\n            </form>\n        </div>\n    )\n}\n\nexport default NumberForm","import { render } from '@testing-library/react';\nimport React from 'react'\nimport { Component } from 'react';\nimport NumberForm from './NumberForm'\n\nclass RandomNumber extends Component {\n    constructor() {\n        super()\n        this.state = {\n            minimum: '',\n            maximum: '',\n            randomNumber: null\n        }\n\n        this.handleChange=this.handleChange.bind(this)\n        this.handleSubmit=this.handleSubmit.bind(this)\n        this.clearForm=this.clearForm.bind(this)\n    }\n\n    handleChange(event) {\n        const value = event.target.value\n        this.setState({\n            [event.target.name]: value\n        })\n    }\n\n    handleSubmit() {\n        const minimum = Number(this.state.minimum)\n        const maximum = Number(this.state.maximum)\n        if (maximum > minimum) {\n            localStorage.setItem(\"minimum\", minimum)\n            localStorage.setItem(\"maximum\", maximum)\n            const randomNum1 = Number(Math.floor(Math.random()*(maximum-minimum + 1)))\n            const randomNum2 = randomNum1 + minimum\n            localStorage.setItem(\"randomNum\", randomNum2)\n            window.location.reload()\n            this.setState({\n                randomNum: randomNum2\n            }) \n        } else {\n            alert(\"Minimum must be smaller than maximum\")\n        }\n        \n    }\n\n    clearForm() {\n        localStorage.clear()\n        window.location.reload()\n      }\n\n    componentDidMount() {\n    if (localStorage.getItem(\"minimum\") != null) {\n        const minimum = localStorage.getItem(\"minimum\")\n        this.setState({\n        minimum: minimum\n        })\n    }\n    if (localStorage.getItem(\"maximum\") != null) {\n        const maximum = localStorage.getItem(\"maximum\")\n        this.setState({\n        maximum: maximum\n        })\n    }\n    }\n\n    render() {\n        if (this.state.randomNumber !== localStorage.getItem(\"randomNum\")) {\n            var randomNumber = localStorage.getItem(\"randomNum\")\n          } else {\n            randomNumber = this.state.randomNumber\n          }\n      \n          if (randomNumber != null && randomNumber !== \"\") {\n            var result = (\n              <div>\n                <p style = {{marginBottom: 0}}>Randomly picked was:</p>\n                <b style = {{marginTop: 0}}>{randomNumber}</b>\n              </div>\n            ) \n          } else {\n            result = null\n          }\n\n\n        return(\n            <div>\n                <h1>Random Number </h1>\n                <h3>Enter the range from which you want to pick a random number</h3>\n                <NumberForm \n                handleChange={this.handleChange}\n                handleSubmit={this.handleSubmit}\n                handleClick={this.clearForm}\n                data={this.state}\n                />\n                {result}\n            </div>\n        )\n    }\n}\n\nexport default RandomNumber","import './App.css';\nimport { Switch, Route, HashRouter as Router } from 'react-router-dom'\nimport Home from './components/Home'\nimport ResponsiveDrawer from './components/ResponsiveDrawer';\nimport RandomPicker from './components/RandomPicker';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport RandomNumber from './components/RandomNumber'\n\nconst drawerWidth = 240\n\n  const useStyles = makeStyles((theme) => ({\n    content: {\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: drawerWidth + 40\n        },\n        flexShrink: 0,\n        padding: 50\n    // padding: theme.spacing(3),\n    },\n  }));\n\nfunction App() {\n  \n  const classes = useStyles();\n\n  return(\n    <React.StrictMode>\n          <Router basename={process.env.PUBLIC_URL}>\n            <div className=\"App\">\n              <header className=\"App-header\">\n                <ResponsiveDrawer />\n                <div className={classes.content}>\n                  <Switch>\n                    <Route exact path={process.env.PUBLIC_URL + \"/\"}>\n                      <Home />\n                    </Route>\n                    <Route exact path={process.env.PUBLIC_URL + \"/generators/item_picker\"}>\n                      <RandomPicker />\n                    </Route> \n                    <Route exact path={process.env.PUBLIC_URL + \"/generators/number_picker\"}>\n                      <RandomNumber />\n                    </Route>\n                  </Switch>\n                </div>  \n              </header> \n            </div>\n          </Router>\n\n    </React.StrictMode>\n    \n  )\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}